---
- name: Load the workflow template settings to get webhook details
  ansible.builtin.set_fact:
    workflow_template: "{{ lookup('ansible.controller.controller_api',
      'workflow_job_templates',
      query_params = { 'name' : webhook_workflow_template },
      host = controller_hostname,
      username = controller_username,
      password = controller_password,
      verify_ssl = False) }}"

- name: Set the webhook_receiver URL
  ansible.builtin.set_fact:
    webhook_receiver: "https://{{ controller_hostname }}{{ workflow_template.related.webhook_receiver }}"

- name: Try and get the webhook secret
  ansible.builtin.set_fact:
    key_deets: "{{ lookup('ansible.controller.controller_api',
      'workflow_job_templates/{{ workflow_template.id }}/webhook_key',
      host = controller_hostname,
      username = controller_username,
      password = controller_password,
      verify_ssl = False) }}"

- name: Set the webkook key
  ansible.builtin.set_fact:
    webhook_key: "{{ key_deets.webhook_key }}"



- name: Create a user access token for EDA
  ansible.controller.token:
    description: "Ansible EDA Access Token"
    scope: "write"
    application: "eda"
    state: present
    tower_host: "{{ controller_hostname }}"
    tower_username: "{{ controller_username }}"
    tower_password: "{{ controller_password }}"
  register: controller_oauthtoken

- name: Store that token for later
  ansible.builtin.set_fact:
    awx_token: "{{ controller_oauthtoken.ansible_facts.controller_token.token }}"

- name: Write out the new token value
  ansible.builtin.debug:
    msg: "Access token for EDA access to AAP: {{ awx_token }}"

- name: Write out webhook details for GitHub
  ansible.builtin.debug:
    msg: "Webhook for workflow - URL: {{ webhook_receiver }}    Key: {{ webhook_key }}"