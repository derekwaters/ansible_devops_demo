---
- name: Perform a set of OpenShift API calls
  block:

    - name: Log in to the OpenShift API
      redhat.openshift.openshift_auth:
        host: "{{ ocp_host }}"
        username: "{{ ocp_username }}"
        password: "{{ ocp_password }}"
        validate_certs: false
        state: present
      register: openshift_auth_results
      when: ocp_token is not defined

    - name: Set the token
      ansible.builtin.set_fact:
        __ocp_api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
      when: ocp_token is not defined
      
    - name: Set the token
      ansible.builtin.set_fact:
        __ocp_api_key: "{{ ocp_token }}"
      when: ocp_token is defined

    - name: Create namespace for OPA
      redhat.openshift.k8s:
        api_key: "{{ __ocp_api_key }}"
        host: "{{ ocp_host }}"
        validate_certs: false
        name: "{{ opa_namespace }}"
        api_version: v1
        kind: Namespace
        state: present

    - name: Create configmap for OPA policies
      redhat.openshift.k8s:
        api_key: "{{ __ocp_api_key }}"
        host: "{{ ocp_host }}"
        validate_certs: false
        state: present
        namespace: "{{ opa_namespace }}"
        resource_definition: "{{ lookup('ansible.builtin.template', 'configmap.yaml.j2') }}"
        
    - name: Create deployment for OPA pod
      redhat.openshift.k8s:
        api_key: "{{ __ocp_api_key }}"
        host: "{{ ocp_host }}"
        validate_certs: false
        state: present
        namespace: "{{ opa_namespace }}"
        resource_definition: "{{ lookup('ansible.builtin.template', 'deployment.yaml.j2') }}"
        
    - name: Create service for OPA deployment
      redhat.openshift.k8s:
        api_key: "{{ __ocp_api_key }}"
        host: "{{ ocp_host }}"
        validate_certs: false
        state: present
        namespace: "{{ opa_namespace }}"
        resource_definition: "{{ lookup('ansible.builtin.template', 'service.yaml.j2') }}"

    - name: Specify OPA setting for later configuration by the infra collections
      ansible.builtin.set_fact:
        controller_settings: "{{ controller_settings | default({}) | combine({'settings': {'OPA_HOST': 'opa.' + opa_namespace + '.svc.cluster.local'}}) }}"

  always:
    - name: If login succeeds, revoke the API key
      when: openshift_auth_results.openshift_auth.api_key is defined
      redhat.openshift.openshift_auth:
        state: absent
        api_key: "{{ openshift_auth_results.openshift_auth.api_key }}"
        host: "{{ ocp_host }}"
        validate_certs: false
      ignore_errors: true
